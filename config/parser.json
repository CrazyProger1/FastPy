{
  "parser_class": "fastpy.parser.parsers.Parser",
  "ast_class": "fastpy.parser.ast.AST",
  "node_parsing": {
    "AssignNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.AssignNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_min_tokens_length": {
                "min_length": 5
              },
              "check_token_types": {
                "types": [
                  "identifier",
                  "operator",
                  "identifier",
                  "operator"
                ]
              },
              "check_token_names": {
                "names": [
                  null,
                  "body_start",
                  null,
                  "assign"
                ]
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 0
            },
            "value_type": {
              "index": 2
            },
            "value": {
              "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.ValueNode",
                "fastpy.parser.nodes.VariableNode",
                "fastpy.parser.nodes.BinOpNode",
                "fastpy.parser.nodes.CallNode"
              ],
              "tokens_slice": {
                "start_index": 4
              }
            }
          }
        },
        {
          "validate_data": {
            "methods": {
              "check_min_tokens_length": {
                "min_length": 3
              },
              "check_token_types": {
                "types": [
                  "identifier",
                  "operator"
                ]
              },
              "check_token_names": {
                "names": [
                  null,
                  "assign"
                ]
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 0
            },
            "value": {
              "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.ValueNode",
                "fastpy.parser.nodes.VariableNode",
                "fastpy.parser.nodes.BinOpNode",
                "fastpy.parser.nodes.CallNode"
              ],
              "tokens_slice": {
                "start_index": 2
              }
            }
          }
        },
        {
          "validate_data": {
            "methods": {
              "check_fixed_tokens_length": {
                "length": 3
              },
              "check_token_types": {
                "types": [
                  "identifier",
                  "operator",
                  "identifier"
                ]
              },
              "check_token_names": {
                "names": [
                  null,
                  "body_start",
                  null
                ]
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 0
            },
            "value_type": {
              "index": 2
            }
          }
        }
      ]
    },
    "VariableNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.VariableNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_fixed_tokens_length": {
                "length": 1
              },
              "check_token_types": {
                "types": [
                  "identifier"
                ]
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 0
            }
          }
        }
      ]
    },
    "ValueNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.ValueNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_fixed_tokens_length": {
                "length": 1
              },
              "check_token_type": {
                "token_index": 0,
                "possible_types": [
                  "literal",
                  "number"
                ]
              }
            }
          },
          "parse_data": {
            "value": {
              "index": 0
            }
          }
        }
      ]
    },
    "FuncNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.FuncNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_min_tokens_length": {
                "min_length": 7
              },
              "check_token_types": {
                "types": [
                  "operator",
                  "identifier",
                  "start_parenthesis"
                ]
              },
              "check_token_names": {
                "names": [
                  "function"
                ]
              },
              "check_token_name_presence": {
                "required_names": [
                  "return_type"
                ]
              },
              "check_token_name": {
                "exception": {
                  "message": "SyntaxError: body start operator expected"
                },
                "token_index": -1,
                "possible_names": [
                  "body_start"
                ]
              },
              "check_token_type_presence": {
                "exception": {
                  "message": "SyntaxError: close bracket expected"
                },
                "required_types": [
                  "end_parenthesis"
                ]
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 1
            },
            "arguments": {
              "parser_class": "fastpy.parser.node_parsers.ArgumentsParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.AssignNode"
              ],
              "tokens_slice": {
                "start_index": 3
              }
            },
            "return_type": {
              "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.VariableNode"
              ],
              "tokens_slice": {
                "start_index": -2,
                "end_index": -1
              }
            }
          }
        },
        {
          "validate_data": {
            "methods": {
              "check_min_tokens_length": {
                "min_length": 5
              },
              "check_token_types": {
                "types": [
                  "operator",
                  "identifier",
                  "start_parenthesis"
                ]
              },
              "check_token_names": {
                "names": [
                  "function"
                ]
              },
              "check_token_name": {
                "exception": {
                  "message": "SyntaxError: body start operator expected"
                },
                "token_index": -1,
                "possible_names": [
                  "body_start"
                ]
              },
              "check_token_type_presence": {
                "exception": {
                  "message": "SyntaxError: close bracket expected"
                },
                "required_types": [
                  "end_parenthesis"
                ]
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 1
            },
            "arguments": {
              "parser_class": "fastpy.parser.node_parsers.ArgumentsParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.AssignNode"
              ],
              "tokens_slice": {
                "start_index": 3
              }
            }
          }
        }
      ]
    },
    "CallNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.CallNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_min_tokens_length": {
                "min_length": 3
              },
              "check_token_types": {
                "types": [
                  "identifier",
                  "start_parenthesis"
                ]
              },
              "check_token_type": {
                "token_index": -1,
                "possible_types": [
                  "end_parenthesis"
                ],
                "exception": {
                  "message": "SyntaxError: close bracket expected"
                }
              }
            }
          },
          "parse_data": {
            "identifier": {
              "index": 0
            },
            "arguments": {
              "parser_class": "fastpy.parser.node_parsers.ArgumentsParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.ValueNode",
                "fastpy.parser.nodes.VariableNode",
                "fastpy.parser.nodes.CallNode",
                "fastpy.parser.nodes.BinOpNode"
              ],
              "tokens_slice": {
                "start_index": 2
              }
            }
          }
        }
      ]
    },
    "ElseNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.ElseNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_token_names": {
                "names": [
                  "else"
                ]
              },
              "check_token_name": {
                "exception": {
                  "message": "SyntaxError: body start operator expected"
                },
                "token_index": -1,
                "possible_names": [
                  "body_start"
                ]
              },
              "check_fixed_tokens_length": {
                "length": 2
              }
            }
          },
          "parse_data": {
          }
        }
      ]
    },
    "IfNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.IfNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_token_names": {
                "names": [
                  "if"
                ]
              },
              "check_token_name": {
                "exception": {
                  "message": "SyntaxError: body start operator expected"
                },
                "token_index": -1,
                "possible_names": [
                  "body_start"
                ]
              },
              "check_min_tokens_length": {
                "min_length": 3
              }
            }
          },
          "parse_data": {
            "condition": {
              "parser_class": "fastpy.parser.node_parsers.ConditionParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.LogicOpNode",
                "fastpy.parser.nodes.BinOpNode"
              ],
              "tokens_slice": {
                "start_index": 1
              }
            }
          }
        },
        {
          "validate_data": {
            "methods": {
              "check_token_names": {
                "names": [
                  "elif"
                ]
              },
              "check_token_name": {
                "exception": {
                  "message": "SyntaxError: body start operator expected"
                },
                "token_index": -1,
                "possible_names": [
                  "body_start"
                ]
              },
              "check_min_tokens_length": {
                "min_length": 3
              }
            }
          },
          "parse_data": {
            "condition": {
              "parser_class": "fastpy.parser.node_parsers.ConditionParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.LogicOpNode",
                "fastpy.parser.nodes.BinOpNode"
              ],
              "tokens_slice": {
                "start_index": 1
              }
            },
            "is_elif": {
              "value": true
            }
          }
        }
      ]
    },
    "WhileNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.WhileNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_min_tokens_length": {
                "min_length": 3
              },
              "check_token_names": {
                "names": [
                  "while"
                ]
              },
              "check_token_name": {
                "exception": {
                  "message": "SyntaxError: body start operator expected"
                },
                "token_index": -1,
                "possible_names": [
                  "body_start"
                ]
              }
            }
          },
          "parse_data": {
            "condition": {
              "parser_class": "fastpy.parser.node_parsers.ConditionParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.LogicOpNode",
                "fastpy.parser.nodes.BinOpNode"
              ],
              "tokens_slice": {
                "start_index": 1
              }
            }
          }
        }
      ]
    },
    "ReturnNode": {
      "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
      "node_class": "fastpy.parser.nodes.ReturnNode",
      "cases": [
        {
          "validate_data": {
            "methods": {
              "check_token_names": {
                "names": [
                  "return"
                ]
              }
            }
          },
          "parse_data": {
            "node": {
              "parser_class": "fastpy.parser.node_parsers.UniversalNodeParser",
              "possible_node_classes": [
                "fastpy.parser.nodes.LogicOpNode",
                "fastpy.parser.nodes.BinOpNode",
                "fastpy.parser.nodes.VariableNode",
                "fastpy.parser.nodes.ValueNode",
                "fastpy.parser.nodes.CallNode"
              ],
              "tokens_slice": {
                "start_index": 1
              }
            }
          }
        }
      ]
    },
    "LogicOpNode": {
      "parser_class": "fastpy.parser.node_parsers.OperationNodeParser",
      "node_class": "fastpy.parser.nodes.LogicOpNode",
      "cases": [
        {
          "validate_data": {
          },
          "parse_data": {
          }
        }
      ]
    },
    "BinOpNode": {
      "parser_class": "fastpy.parser.node_parsers.OperationNodeParser",
      "node_class": "fastpy.parser.nodes.BinOpNode",
      "cases": [
        {
          "validate_data": {
          },
          "parse_data": {
          }
        }
      ]
    }
  }
}